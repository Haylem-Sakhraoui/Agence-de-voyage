
services:


  postgres:
    image: postgres:latest
    container_name: postgres_container
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=fantasy
    ports:
      - "5432:5432"  # Exposes PostgreSQL on port 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my-network

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin  # Set your desired admin username
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin  # Set your desired admin password
      - DB_VENDOR=PostgreSQL
      - PROXY_ADDRESS_FORWARDING=true
    ports:
      - "8180:8080"  # Map container's 8080 to host's 8180
    command: start-dev
    networks:
      - my-network

  apigateway:
    container_name: apigateway
    build: D:\Microservice\AgenceVoyageMicro-ApiGetWay\AgenceVoyageMicro-ApiGetWay
    ports:
      - "8089:8089"
    hostname: apigateway
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka
    image: "apigateway"
    depends_on:
      - discovery
    networks:
      - my-network

  discovery:
    build: D:\Microservice\AgenceVoyageMicro-ServerEureka
    ports:
      - "8761:8761"
    image: "discovery-service"
    networks:
      - my-network

  mysql_2:
    image: "mysql:5.6"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=maisonhote
    ports:
      - 3308:3306
    volumes:
      - mysql_2_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - my-network

  mysql_1:
    image: "mysql:5.6"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=hotel
    ports:
      - 3307:3306
    volumes:
      - mysql_1_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - my-network
  mysql_3:
    image: "mysql:5.6"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=offre
    ports:
      - 3309:3306
    volumes:
      - mysql_3_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - my-network
  transport:
    container_name: transport
    build: D:\Microservice\AgenceVoyageMicro-Transport
    ports:
      - "8086:8086"
    hostname: transport
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka
    image: "transport"
    networks:
      - my-network

  hotel:
    container_name: hotel
    build: D:\Microservice\AgenceVoyageMicro-Hotel\AgenceVoyageMicro-Hotel
    ports:
      - "8098:8098"
    hostname: hotel
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql_1:3306/hotel?autoReconnect=true&useSSL=false
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root

    image: "hotel"
    depends_on:
      - mysql_1
    networks:
      - my-network

  offre:
    container_name: offre
    build: D:\Microservice\AgenceVoyageMicro-Offre\AgenceVoyageMicro-offre
    ports:
      - "8084:8084"
    hostname: offre
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql_3:3306/offre?autoReconnect=true&useSSL=false
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
    image: "offre"
    depends_on:
      - mysql_3
    networks:
      - my-network

  maisonhote:
    container_name: maisonhote
    build: D:\Microservice\AgenceVoyageMicro-MaisonHote\AgenceVoyageMicro-maisonHote
    ports:
      - "8081:8081"
    hostname: maisonhote
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql_2:3306/maisonhote?autoReconnect=true&useSSL=false
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
    image: "maisonhote"
    depends_on:
      - mysql_2
    networks:
      - my-network

  reservation:
    container_name: reservation
    build: D:\Microservice\AgenceVoyageMicro-Reservation\AgenceVoyageMicro-Reservation
    ports:
      - "8083:8083"
    hostname: reservation
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka
    image: "reservation"
    networks:
      - my-network

  angular-service:
    container_name: angularcontainer
    build: D:\Microservice\AgenceVoyageMicro-Client
    ports:
      - '4200:80'
    volumes:
      - /d/Microservice/AgenceVoyageMicro-Client/nginx.conf:/etc/nginx/conf.d/default.conf
    environment:
      NODE_ENV: production
    networks:
      - my-network


  userservice:
    build: D:\Microservice\AgenceVoyageMicro-mongodb\AgenceVoyageMicro-mongodb
    ports:
      - "5000:5000"
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/
      - MONGO_URI=mongodb+srv://haylemsakhraoui:JPhIYACMNEBVSRi1@fantasydev.stjvy.mongodb.net/?retryWrites=true&w=majority&appName=fantasyDev

    command: npm start
    image: userservicemongo
    depends_on:
      - discovery
    networks:
      - my-network

volumes:
  mysql_1_data:
  mysql_2_data:
  mysql_3_data:
  postgres_data:

networks:
  my-network:
    driver: bridge
